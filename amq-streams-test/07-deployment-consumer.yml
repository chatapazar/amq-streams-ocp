apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: java-kafka-consumer
  name: java-kafka-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java-kafka-consumer
  template:
    metadata:
      labels:
        app: java-kafka-consumer
    spec:
      containers:
        - name: java-kafka-consumer
          image: quay.io/strimzi-examples/java-kafka-consumer:latest
          env:
            - name: STRIMZI_TOPIC
              value: apps.samples.greetings.reversed
            - name: STRIMZI_LOG_LEVEL
              value: "INFO"
            - name: STRIMZI_MESSAGE_COUNT
              value: "1000000"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: my-cluster-kafka-bootstrap:9093
            - name: KAFKA_GROUP_ID
              value: sample-consumer-reversed-group
            - name: KAFKA_KEY_DESERIALIZER
              value: "org.apache.kafka.common.serialization.StringDeserializer"
            - name: KAFKA_VALUE_DESERIALIZER
              value: "org.apache.kafka.common.serialization.StringDeserializer"
            - name: KAFKA_SECURITY_PROTOCOL
              value: SSL
            - name: KAFKA_SSL_TRUSTSTORE_CERTIFICATES
              valueFrom:
                secretKeyRef:
                  name: my-cluster-cluster-ca-cert
                  key: ca.crt
            - name: KAFKA_SSL_TRUSTSTORE_TYPE
              value: PEM
            - name: KAFKA_SSL_KEYSTORE_CERTIFICATE_CHAIN
              valueFrom:
                secretKeyRef:
                  name: sample-user-tls
                  key: user.crt
            - name: KAFKA_SSL_KEYSTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: sample-user-tls
                  key: user.key
            - name: KAFKA_SSL_KEYSTORE_TYPE
              value: PEM